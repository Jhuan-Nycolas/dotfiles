exit
ls
clear
ls
clear
ls
clear
ls
clear
cd NixDotfiles/
ls
cd ..
ls
clear
cd .config
ls
clear
ls
rm -rf ~/dotfiles/
mkdir ~/Downloads/
mkdir ~/dotfiles
rm -rf nushell/; ln -sf ~/dotfiles/nushell .
ls
clear
ls
clear
cd NixDotfiles/
ls
clear
ls
cd home-manager/
ls
clear
cd hosts/default/
ls
cd shells/
cd ..c
cd ..
clear
cd hosts/
clear
nvi
clear
cat dotfiles/waybar/scripts/power-menu.sh
loginctl lock-session
clear
nvim
cat ./default/shells/nushell/nushell.nix
sudo pacman -S zoxide bat oh-my-posh
clear
yay -S oh-ny-posh
clear
yay -S oh-my-posh
oh-my-posh get themes --users
oh-my-posh get themes --user
oh-my-posh get themes
oh-my-posh get themes --user
nvim ./prompt.omp.json
clear
oh-my-posh init nushell --config "./prompt.omp.json" | save -f ./prompt.nu<\n>source ./prompt.nu
oh-my-posh init nushell --config "~/prompt.omp.json" | save -f ./prompt.nu<\n>source ./prompt.nu
ls
oh-my-posh init nushell --config "~/prompt.omp.json" | save -f ./prompt.nu
oh-my-posh init nu --config "~/prompt.omp.json" | save -f ./prompt.nu
source prompt.nu
cat prompt.nu
clear
oh-my-posh init nu --config "/home/tux/prompt.omp.json" | save -f ./prompt.nu
source prompt.nu
cat prompt.nu
cat ~/prompt.omp.json | jq .
sudo pacman -S jq<\n>
cat ~/prompt.omp.json | jq .
oh-my-posh init nu --config ~/prompt.omp.json | save -f prompt.nu<\n>source prompt.nu
ls
cd NixDotfiles/
ls
clear
ls
ls -a
clear
oh-my-posh init nu --config ~/prompt.omp.json --debug
ls
clear
cd 
ls
clear
ls
nvim prompt.nu
clear
source prompt.nu
kls
ls
clear
2ls
ls
clear
ls
rm prompt.omp.json
ls
source prompt.nu
clear
nvim prompt.omp.json
ls
clear
ls
clear
ls
clear
ls
clear
cd dotfiles/
ls
cd nushell/
ls
clear
ls
mv ~/prompt* .
ls
oh-my-posh init nu --config ~/.config/nushell/prompt.omp.json --debug
clear
ls
clear
nvim prompt.nu
clear
source prompt.nu
clear
ls
clear
ls
clear
ls
nvim config.nu
clear
ls
clear
$env.config
ls -a
clear
find / -name *zoxide*
find / --name *zoxide*
find / *zoxide*
find /
echo *zoxide* | find /
echo "*zoxide*" | find /
echo "zoxide" | find /
echo "zoxide*" | find /
clear
zoxide init nu
zoxide init nushell 
ls
cd nushell
clear
nvim config.nu
ls
clear
ls
clear
ls
clear
ls
cd dotfiles/l
cd dotfiles/
ks
ls
clear
ls
cd nushell/
ls
clear
ls
source catpuccin.nu
ls
clear
ls
clear
ls
nvim catpuccin.nu
ls
clear
cd ..
ls
cd kitty/
ls
clear
ls
clear
ls
clear
ls
nvim
clear
nvim catpuccin.conf
clear
cd dotfiles/
ls
clear
ls
cd nvim
ls
clear
ls
nvim
clear
ls
mv lua/plugins/catpuccin.lua lua/plugins/theme.lua
clear
nvim
clear
nvim
clear
nvim
clear
git clone http://github.com/catppuccin/nvim
ls
rm -fr nvim
clear
nvim --version
git config --global credential.helper
git config --global credential.helper store
nvim ~/.git-credentials
rm .git-credentials
git remote -v
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
clear
ls
git clone https://github.com/catppuccin/nvim
rm -rf nvim
ls
clear
ls
cd dotfiles/
ls
clear
ls
clear
git init
git branch -m main
git remote add https://github.com/Jhuan-Nycolas/dotfiles
git remote add repo https://github.com/Jhuan-Nycolas/dotfiles
clear
git add .
git commit -m "initial commit"
git config --global user.email "jhuan2024@hotmail.com"
git config --global user.name "Jhuan-Nycolas"
clear
git add .
git commit 
git commit -m "initial commit"
git push
clear
git push -u repo main
clear
nvim
clear
nvim
clear
nvim
ls
cd dotfiles/
ls
rm -rf nvim
lear
clear
ls
git clone https://github.com/Jhuan-Nycolas/Nvim
git add .
rm -rf Nvim
git add .
git commit -m "Trocando neovim por neovim do nix"
git push
clear
cd ..
ls
clear
sh <( curl -L https://nixos.org/nix/install)
clear
sh <( curl -L https://nixos.org/nix/install)>
clear
sh <( curl -L https://nixos.org/nix/install) --no-daemon
clear
sh <(curl -L https://nixos.org/nix/install) --no-daemon
clear
sh <(curl -L https://nixos.org/nix/install) --no-daemon
clear
nvim install.sh
chmod +x install.sh
./install.sh
/home/tux/.nix-profile/etc/profile.d/nix.sh
clear
ls
nix
clear
ls
rm install.sh
ls
clear
nix
clea\r
clear
ls
clear
ls
clear
/home/tux/.nix-profile/etc/profile.d/nix.sh
chmod +x /home/tux/.nix-profile/etc/profile.d/nix.sh
/home/tux/.nix-profile/etc/profile.d/nix.sh
clear
nix
/home/tux/.nix-profile/etc/profile.d/nix.sh
cat /home/tux/.nix-profile/etc/profile.d/nix.sh
sudo pacman -S bat
clear
cat /home/tux/.nix-profile/etc/profile.d/nix.sh
clear
cat /home/tux/.nix-profile/etc/profile.d/nix.sh
clear
/home/tux/.nix-profile/etc/profile.d/nix.sh
nix
ls
clear
echo nix | find /
echo nix | find / --name
echo nix | find / -name
echo nix | find / nix
ls / | find nix
ls **/* | find nix
clear
ls **//* | find nix
clear
ls / **/* | find nix
clear
ls **/* | find nix
cd /
clear
ls **/* | find nix
clear
ls
clear
ls
clear
ls
cd nix
ls
clear
cd ..
clear
cd
clear
.nix-profile/bin/nix
.nix-profile/bin/nix run
clear
nix
.nix-profile/bin/nix run
nvim .config/nix/nix.conf
clear
let-env PATH = ($env.PATH | prepend "~/.nix-profile/bin")<\n>
$env;PATH = ($env.PATH | prepend "~/.nix-profile/bin")<\n>
$env.PATH = ($env.PATH | prepend "~/.nix-profile/bin")
$env.PATH = ($env.PATH | prepend "~/.nix-profile/bin" "/nix/store")
$env.PATH = ($env.PATH | prepend "~/.nix-profile/bin")
clear
ls
clear
if
if .nix-profile/bin/nix
if .nix-profile/bin/nix {echo a}
if !(.nix-profile/bin/nix; $?) {echo a}
if !(.nix-profile/bin/nix; ?) {echo a}
?
$?
clear
if !(.nix-profile/bin/nix; $env.LAST_EXIT_CODE) {echo a}
if !(.nix-profile/bin/nix > /dev/null; $env.LAST_EXIT_CODE) {echo a}
if !(.nix-profile/bin/nix | /dev/null; $env.LAST_EXIT_CODE) {echo a}
if !(.nix-profile/bin/nix | null; $env.LAST_EXIT_CODE) {echo a}
clear
if not (try .nix-profile/bin/nix | null) {<\n>  echo "nix falhou ou não existe"<\n>}<\n>
clear
if not (try { .nix-profile/bin/nix | null}) {<\n>  echo "nix falhou ou não existe"<\n>}
if not (try .nix-profile/bin/nix | null ) {<\n>  echo "nix falhou ou não existe"<\n>}
clear
if not (try { .nix-profile/bin/nix } | null) {<\n>  echo "nix falhou ou não existe"<\n>}<\n>
clear
try { .nix-profile/bin/nix --version } | null<\n>if $env.LAST_EXIT_CODE != 0 {<\n>  echo "nix falhou ou não existe"<\n>}<\n>
try { .nix-profile/bin/nix --version } | null<\n>if $env.LAST_EXIT_CODE != 0 {<\n>  echo "nix falhou ou não existe"<\n>} else {<\n>  echo "Nix deu certo existe"<\n>}
clear
nix
clear
nix run 
clear
nix run github:Jhuan-Nycolas/Nvim
clear
git clone https://github.com/Jhuan-Nycolas/Nvim
cd Nvim/
ls
nvim config.nix
git add .
git commit -m "Catppuccin >>>>> Nord"
git push
clear
nix run github:Jhuan-Nycolas/Nvim
nvim
nix run github:Jhuan-Nycolas/Nvim
clear
nix run github:Jhuan-Nycolas/Nvim?rev=main
nix run "github:Jhuan-Nycolas/Nvim?rev=main"
clear
git log -n1 --pretty=format:"%H"
sudo pacman -S less
clear
git log -n1 --pretty=format:"%H"
nix run github:Jhuan-Nycolas/Nvim?rev=56f951f487a917d97179a026267290b9a1a17650
nvim config.nix
clear
nix run github:Jhuan-Nycolas/Nvim?rev=56f951f487a917d97179a026267290b9a1a17650
git add .
git commit -m "Usando Macchiato"
git push
clear
nix run github:Jhuan-Nycolas/Nvim?rev=56f951f487a917d97179a026267290b9a1a17650
nix run github:Jhuan-Nycolas/Nvim?rev=
git log -n1 --pretty=format:"%H"
nix run github:Jhuan-Nycolas/Nvim?rev=2f96f4c24c8df66bd505dcd33daf670f37205f3e
ls
clear
ls
cd ..
ls
clear
ls
clear
alias nvim = nix run github:Jhuan-Nycolas/Nvim
clear
nvim dotfiles/nushell/config.nu
nvim dotfiles/nushell/env.nu
clear
nvim
clear
ls
nix
nvim
clear
ls
clear
nvim dotfiles/nushell/env.nu
clear
nvim dotfiles/nushell/config.nu
nvim dotfiles/nushell/env.nu
clear
nvim
clear
cd dotfiles/nushell/
ls
clear
ls
which nix
which nux
clear
nvim config.nu
nvim
nix run github:Jhuan-Nycolas/Nvim --refresh
nvim
clear
nvim
clear
cd dotfiles/
ls
clear
cd hypr/
ks
ls
clear
nvim hyprpaper.conf
hyprpaper
clear
nvim hyprpaper.conf
ls
clear
hyprpaper
ls
clear
nvim hyprpaper.conf
clear
ls
clear
cd dotfiles/
ls
cd kitty/
ls
clear
ls
clear
nvim
ls
clear
ls
hyprpaper
clear
ls
cd Nvim/
ls
clear
nvim config.nix
nix run
git add .
git commit -m "Mudando o fundo para transparente"
git push
nix run github:Jhuan-Nycolas/Nvim --refresh
clear
nvim
clear
ls
clear
cd ..
ls
cd dotfiles/
ls
git add .
git commit -m "Backup"
git push
clear
ls
clear
cd ..
ls
clear
ls
rm -rf NixDotfiles/
l
clear
ls
clear
poweroff
nohup hyprpaper
ls
rm nohup.out
clear
nohup hyprpaper
ls
cat nohup.out
pkill hyprpaper
clear
ls
rm nohup.out
clear
cd dotfiles/
ls
cd hypr/
ls
clear
ls
rm nohup.out
ls
clear
ls
chmod +x ./init.sh
clear
exit
ls
cd dotfiles/
ls
cd kitty/
ls
clear
nvim hyprland.conf
clear
ls
clear
pkill Hyprland
ls
clear
hyprpaper
waybar
clear
ls
clear
cd dotfiles/
ls
clear
ls
cd hypr/
ls
nvim hyprpaper.conf
clear
pkill Hyprland
hyprpaper
clear
ls
clear
ls
cd dotfiles
ls
clear
cd hypr/
ls
clear
ls
nvim hyprland
clear
pkill Hyprland
ls
clear
ls
cd dotfiles
ls
clear
cd hypr/
ls
clear
nvim hyprland.conf
clear
pkill Hyprland
ls
clear
cd dotfiles/
lsa
ls
cd hypr/
ls
clear
ls
clear
nvim hyprland.conf
pkill Hyprland
hyprland --help
exit
hyprland -c .config/hypr/hyprland.conf
clear
pkill Hyprland
ls
cd .config
ls
rm nvim
ls
clear
ls
cd hypr
ls
cat hyprland.conf
clear
hyprctl getoption decoration:active_border_color
hyprctl getoption decoration:col.active_border_color
cat .config/hypr/hyprland.conf
clear
hyprctl getoption decoration:col.active_border_color
hyprctl getoption general:col.active_border_color
hyprctl getoption general:col.active_border
cat .config/hypr/hyprland.conf
clear
ls
clear
cd .config
cd hypr
ls
clear
nvim hyprland.conf
cd ~/dotfiles/hypr
ls
clear
cd ..
ls
clear
ls
git add .
git commit -m "Esses prontos"
git push
clear
sudo pacman -S yazi
yazi
clear
ls
clear
ls
yazi --init
yazi -- --init
clear
yazi --help
git clone https://github.com/sxyazi/yazi ./yazi
clear
ls
cd yazi/
ls
clear
ls
lear
clear
rm -rf ./*
clear
cd ~/.config/yazi<\n><\n>curl -LO https://raw.githubusercontent.com/sxyazi/yazi/main/yazi.toml<\n>curl -LO https://raw.githubusercontent.com/sxyazi/yazi/main/keymap.toml<\n>curl -LO https://raw.githubusercontent.com/sxyazi/yazi/main/theme.toml<\n>
ls
cat theme.toml
cat keymap.toml
cat yazi.toml
clear
rm ./*
clear
cd ..
ls
clear
cd ~/.config
ls
ln -sf ~/dotfiles/yazi .
ls
c
clear
cd ~/dotfiles/
ls
clear
cd yazi/
ls
clear
curl -LO https://raw.githubusercontent.com/sxyazi/yazi/main/crates/yazi-config/assets/yazi.toml<\n>curl -LO https://raw.githubusercontent.com/sxyazi/yazi/main/crates/yazi-config/assets/keymap.toml<\n>curl -LO https://raw.githubusercontent.com/sxyazi/yazi/main/crates/yazi-config/assets/theme.toml
nvim
clear
curl -LO https://raw.githubusercontent.com/sxyazi/yazi/main/crates/yazi-config/assets/yazi.toml<\n>curl -LO https://raw.githubusercontent.com/sxyazi/yazi/main/crates/yazi-config/assets/keymap.toml<\n>curl -LO https://raw.githubusercontent.com/sxyazi/yazi/main/crates/yazi-config/assets/theme.toml
cat *.toml
clear
curl -LO https://raw.githubusercontent.com/sxyazi/yazi/next/crates/yazi-config/assets/yazi.toml<\n>curl -LO https://raw.githubusercontent.com/sxyazi/yazi/next/crates/yazi-config/assets/keymap.toml<\n>curl -LO https://raw.githubusercontent.com/sxyazi/yazi/next/crates/yazi-config/assets/theme.toml
cat *.toml
clear
yazi
clear
yazi
clear
nvim yazi.toml
clear
yazi
nvim flavors/
yazi
clear
yazi
yazi
clear
yazi
clear
yazi
clear
ls
clear
cd ..
ls
clear
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
ln -sf ~/dotfiles/tmux .config
tmux
sudo pacman -S tmux
clear
exit
tmux
clear
exit
tmux
clear
source .config/tmux/tmux.conf
exit
tmux
cçear
clear
cçear
source-file ~/.config/tmux/tmux.conf
clear
tpm
clear
ls
cd .tmux
ls
cd plugins/
ls
cd tpm/
ls
./tpm
cat tpm
clear
exit
exit
exit
ls
clear
ls
clear
ls
clear
yazi
clear
ls
git add 
git add .
ls 0a
clear
ls -a
cd tmux
ls -a
cd plugins/
ls
cd ..
ls
mv tmux.conf .tmux.conf
cd .tmux.conf
cd .tmux.conf ..
mv .tmux.conf ..
clear
cd ..
ls
rm -rf tmux
clear
rm ~/.config/tmux
ls
clear
ls
ls -a
ln -sf .tmux.conf ~
clear
ls
clear
ls
clear
ls
exit
sudo pacman -S ghc
clear
sudo nvim /etc/pacman.conf
clear
sudo pacman -S paru
clear
sudo pacman -S nitch
yay -S nitch
clear
nitch
sudo pacman -S fastfetch
fastfetc
fastfetch
fastfetch --help
sudo pacman -Rns fastfetch
ckear
clear
nitch
clear
exit
cd dotfiles
nvim .tmux.conf
exit
yay -S paru
clear
yay -Syu
clear
ls
clear
ls
nvim .tmux.conf
ls
exit
ls
exit
nvim ~/dotfiles/.tmux.conf
ls
clear
ls
git clone https://github.com/Jhuan-Nycolas/Dev
cler
clear
ls
cd dotfiles/
git add .
git commit -m "TMUX pronto"
git push
clear
cd ..
ls
clear
cd Dev
ls
rm flake.nix
rm flake.lock
clear
l
clear
s
clear
ls
mkdir Haskell
cd Haskell/
clear
ghci
clear
alsamixer
ghci
clear
cd ..
ls
git add .
git commit -m "Removendo nix"
git push
clear
cd ..
ls
cd Nvim/
ls
nvim config.nix
clear
git add .
git commit -m "Adicionado suporte a haskell"
git push
clear
nix run github:Jhuan-Nycolas/Nvim --refresh
nvim config.nix
which nvim
/bin/nvim config.nix
clear
nvim
clear
nix run github:Jhuan-Nycolas/Nvim --refresh
clear
nvim --refresh
nix run github:Jhuan-Nycolas/Nvim --refresh
git add .
git commit -m "Desbugando"
git push
clear
nvim --refresh
clear
cd ..
ls
cd Dev
ls
clear
cd Haskell/
ls
clear
cd Dev/Haskell/
ls
clear
ghc main.hs -o main
clear
ghc main.hs -o main
mv main.hs program.hs
clear
ghc program.hs -o program
sudo pacman -S haskell
cçear
clear
ghc program.hs -o program
clear
ghcup
clear
sudo pacman -S ghcup
clear
ghc --version
clear
ghc program.hs -o program
clear
ghc program.hs -o program
clea
clear
ghc program.hs -o program
sudo pacman -S cabal-install
clear
ghc program.hs -o program
ghc-pkg check
clear
sudo pacman -S g++ gcc gmp make ncurses realpath xz-utils pkg-config
exit
sudo pacman -Rns ghc
exit
curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | bash
clear
ghc program.hs -o program
ghc
ghci
clear
sudo pacman -S ghc
clear
ghc program.hs -o program
ghc-tui
clear
sudo pacman -Rns ghc
clear
curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | bash
ghc
bash
clear
$env.PATH = ($env.PATH | prepend $"($env.HOME)/.ghcup/bin")<\n>$env.PATH = ($env.PATH | prepend $"($env.HOME)/.cabal/bin")
ghc
clear
ghc program.hs -o program
ls
./program
./program.hi
./program.o
clear
ls
clear
nvim ~/dotfiles/nushell/env.nu
cd ~/dotfiles; git add .; git commit -m "Colocado ghc no path"; git push; cd ~/Dev/Haskell
clear
nvim main.hs
source ~/dotfiles/nushell/env.nu
clear
ls
clear
nvim Makefile
make
clear
ls
clear
alias run = make; ./program
run
alias run = 'make; ./program'
def run [] { make; ./program }
clear
run
def run [] { make | null; ./program }
clear
run
clear
sudo pacman -S entr
ls *program
echo program | entr run
echo program | entr ./run.sh
echo "make; ./program; clear" >> run.sh
ls
echo "make; ./program; clear" | save run.sh
çs
ls
clear
echo program | entr ./run.sh
chmod +x run.sh
clear
echo program | entr ./run.sh
clear
nvim run.sh
clear
ls
clear
ghc --help
ghc --wathc
ghc --watch
clear
ls
clear
echo program.sh | entr ./run.sh
echo "program.hs" | entr ./run.sh
clear
nvim run.sh
clear
nvim main.hs
clear
exut
exit
echo "program.hs" | entr ./run.sh
exit
tmux
clear
exit
git clone https://github.com/Keyitdev/sddm-astronaut-theme ./sddm
ls
cd sddm
ls
clear
ls
./setup.sh
clear
./setup.sh
clear
./setup.sh
clear
./setup.sh
ls
cp -r . /usr/share/sddm/themes/sddm-astronaut-theme
sudo cp -r . /usr/share/sddm/themes/sddm-astronaut-theme
clear
./setup.sh
clear
cd ..
ls
rm -rf sddm
clear
exit
tmux
nvim
exit
tmux
clear
ls
clear
ls
rm .tmux/
rm .tmux.conf
clear
cp dotfiles/.tmux.conf .
cleat
clear
exit
tmux
clear
ls
clear
cd dotfiles/
ls
ls -a
clear
cd ..
ls
clear
exit
ls
clear
ls
cd Dev/Haskell/
ls
clear
cd Dev/Haskell/
ls
clear
exit
sudo pacman -S haskell-language-server
yay -Syu
clear
exit
nvim
ls
clear
clea
clear
sudo pacman -Rns haskell-language-server
clear
curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | bash
exit
nitch
clear
nitch
clear
exut
exit
nvim program.hs
echo "program.hs" | entr ./run.sh
clear
exit
cd .
cd ..
git add .
git commit -m "Aprendendo haskell"
git push
clear
exit
tmux
clear
exit
ls
clear
cd Dev/Haskell/
ls
clear
exit
exit
tmux
cd
clear
exit
cd Dev/Haskell/
ls
clear
alsamixer
clear
cd Dev/Haskell/
clear
echo "program.hs" | entr ./run.sh
exit
echo "program.hs" | entr ./run.sh
cd Dev/Haskell/
cçear
clear
echo "program.hs" | entr ./run.sh
clear
echo "program.hs" | entr ./run.sh
pkill neovim
pkill nix
pkill nix run
pkill nix
clear
cd Dev/Haskell/
echo "program.hs" | entr ./run.sh
exit
nvim program.hs
clear
cd ..
git add .
git commit -m "Aprendendo haskell"
git push
exit
alsamixer
exit
tmux
clear
exit
poweroff
cd Dev/Haskell/
clear
exit
tmux
cd
clear
cd Dev/Haskell/
exit
clear
cd Dev/Haskell/
clear
ls
clear
nvim program.hs
nvim ~/Nvim
cd ~/Nvim; git add .; git commit -m "Mudando uns keybinds"; git push; cd ~/Dev/Haskell
nvim --refresh
clear
alsamixer
exit
echo "program.hs" | entr ./run.sh
clear
ls
clear
ghc --help
clear
ls
clear
ghc -i program.hs
ls
rm program program.hi
ls
rm program.o
ls
cleare
clear
ls
clear
runghc program.hs
echo "program.hs" | entr runghc program.hs
clear
ls
cd Dev/Haskell/
clear
ls
clar
clear
ghci program.hs
clear
ghci program.hs
clear
exit
echo "program.hs" | entr ./run.sh
clear
nvim
cd ..
git add .
git commit -m "Aprendendo haskell"
git push
cd Haskell/
clear
exit
tmux
exit
tmux
clear
cd Dev/Haskell/
clear
echo "program.hs" | entr ./run.sh
clear
ls
exit
nvim program.hs
cd ..
git add .
git commit -m "Aprendendo haskell"
git puhs
git push
rm -rf Haskell/
mkdir F#
ls
clear
cd F#
ls
clar
clear
sudo pacman -S dotnet
clear
curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | bash
clear
ls
clear
rm -rf ~/.cabal/
rm -rf ~/.ghcup/
clear
ls
clear
nvim ~/Nvim
clear
sudo pacman -S dotnet-sdk dotnet-runtime
clear
dotnet --version
clear
dotnet new console -lang F#
clear
ls
clear
ls
clear
cd obj
ls
cd ..
ls
clear
nvim program.hs --refresh
cd ~
cd Nvim/
git add .
git commit -m "Removendo haskell e trocando por fsharp"
git push
cd ~/Dev/F#
clear
alsamixer
exit
cd ~/Dev/F#
ls
clear
dotnet run
ls
clear
ls
clear
nvim Program.fs
clear
alsamixer
echo "Program.fs" | entr dotnet run
clear
exit
nvim program.hs --refresh
cd ;;
cd F#
çs
ls
clear
cd ..
clear
git add .
git commit -m "Eu odeio Haskell"
git push
clear
exit
tmux
cd
clear
ls
clear
echo $env.PWD
cd Dev
echo $env.PWD
clear
$env.PWD = /
$env.PWD = "/"
ssh server@192.168.1.11
clear
ls
clear
sudo pacman -S neovide
clear
cd .nix-profile
ls
cd .nix-profile
cd ./.nix-profile
ls -a
cd .mozilla
cd ..
ls
clear
ls
ls -a
cd .nix-defexpr/
ls
cd ..
ls
clear
ls -a
ls .nix-profile
clear
ls
clear
ls -a
which ./.nix-profile
clear
ls
cd .nix-profile
ls
clear
cd .nix-profile
find .nix-profile
ls **/* / | find .nix-profile
ls **/* | find .nix-profile
clear
cd ~
cd /
clear
ls **/* | find .nix-profile
clear
cd /nix/var/nix/profiles/per-user/seu-usuario/profile
cd /nix/var/nix/profiles/per-user/tux/profile
cd /nix/
ls
cd var
ls
cd nix/
ls
cd profiles/
ls
cd per-user/
ls
ls -a
cd ..
ls
clear
cd ..
ls
cd ..
cd store/
ls
clear
ls *nvim
ls *nvim*
nvim Nvim/config.nix
clear
sudo pacman -S gitsingns-nvim
clear
ls
clear
sudo pacman -Rns neovide
clear
cd Dev/
ls
rm -rf F#
mkdir Haskell
╭───┬───────────┬──────┬───────┬──────────────╮<\n>│ # │   name    │ type │ size  │   modified   │<\n>├───┼───────────┼──────┼───────┼──────────────┤<\n>│ 0 │ Cpp       │ dir  │  30 B │ 2 days ago   │<\n>│ 1 │ F#        │ dir  │ 104 B │ 17 hours ago │<\n>│ 2 │ Markdowns │ dir  │  60 B │ 2 days ago   │<\n>│ 3 │ Python    │ dir  │  22 B │ 2 days ago   │<\n>╰───┴───────────┴──────┴───────┴──────────────╯
clear
echo \n╭───┬───────────┬──────┬───────┬──────────────╮<\n>│ # │   name    │ type │ size  │   modified   │<\n>├───┼───────────┼──────┼───────┼──────────────┤<\n>│ 0 │ Cpp       │ dir  │  30 B │ 2 days ago   │<\n>│ 1 │ F#        │ dir  │ 104 B │ 17 hours ago │<\n>│ 2 │ Markdowns │ dir  │  60 B │ 2 days ago   │<\n>│ 3 │ Python    │ dir  │  22 B │ 2 days ago   │<\n>╰───┴───────────┴──────┴───────┴──────────────╯
clear
ls
clear
ls
clear
cd Haskell/
ls
clear
cd Nvim
ls
nvim config.nix
git add .
git commit -m "Tabom mais uma chance pro haskell"
git push
clear
curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | bash
nvim config.nix --refresh
cd Hs
cd hslç
cd hsl
cd Hskl
cd Has
cd 
cd kl
cd kell
cd
cd el
clear
cd
cd el
clea
clear
ls
clear
cd
cd sdk
cd ask
ask
as
clear
ls
clear
rm a.out
ls
clear
as
ls
rm a.out
clear
cd ask
clear
runghc main.hs
nvim main.hs
git add .
git commit -m "Codando"
git push
ls
clear
cd dotfiles/
cd nushell/
ls
nvim catpuccin.nu
clear
cd ..
git add .
git commit -m "Mudando comandos desconhecidos para vermelho"
git push
clear
cd ask
clear
nvim foreach.hs
clear
echo
clear
exit
ls
clear
echo "clear; runghc main.hs" | save run.sh | entr ./run.sh
ls
chmod +x run.sh
clear
echo "clear; runghc main.hs" | save run.sh | entr ./run.sh
clear
ls *.hs | entr ./run.sh
clear
/bin/ls
clear
/bin/ls *.hs
clear
nvim foreach.hs
exit
tmux
clear
cd ask
clear
ls *.hs | entr ./run.sh
clear
ls
clear
ls *.hs | entr ./run.sh
clear
/bin/ls *.hs | entr ./run.sh
clear
/bin/ls *.hs | entr ./run.sh
clear
/bin/ls *.hs | entr ./run.sh
clear
/bin/ls *.hs | entr ./run.sh
clear
/bin/ls *.hs | entr ./run.sh
clear
ls
clear
ls
clear
ls
clear
0 or 1
clear
ls
clear
ls
cd Dev
ls
mkdir Java
cd Java
clear
touch bin.java
clear
cd Nvim
ls
sudo pacman -S jdk-openjdk
nvim config.nix
git add .
git commit -m "Adicionando suporte a Java"
git push
clear
clear
ls
clear
rm bin.java
ls
clear
ls
clear
cd ..
ls
cd Cpp
ls
clear
ls
rm open.cpp
rm Program
ls
clear
nvim config.nix --refresh
clear
cd ..
ls
clear
cd Java/
ls
clear
sudo pacman -S obsidian
yay -Syu
clear
cd Java
clear
nvim logicOperators.java
cleat
clear
java Main.java
clear
javac Main.java
java Main
cçear
clear
javac Main.java
java Main
clear
javac Main.java
clear
java Main
javac Main.java; java Main
clear; javac Main.java; java Main
echo "clear; javac Main.java; java Main" | save run.sh
clear
chmod +x run.sh
clear
echo "Main.java" | entr ./run.sh
cçear
clear
echo "Main.java" | entr ./run.sh
clear
nvim run.sh
clear
cd Nvim
cd Dev/Java/
ls
clear
exit
nvim ~/Nvim
clear
nvim Main.java --refresh
nvim ~/Nvim/config.nix
clear
cd ~/Nvim; git add .; git commit -m "Mudando uns keybinds"; git push; cd ~/Dev/Java
clear
nvim Main.java --refresh
echo "Main.java" | entr ./run.sh
clear
ls
clear
echo "Main.java" | entr ./run.sh
clear
exit
ls
clear
cd ..
ls
cd Java
ls
clear
ls
mkdir ~/Computer
mv ./* ~/Computer
clear
ls
clear
cd ~
ls
clear
cd Computer/
ls
clear
ls
git init
git branch -m main
git remote add repo https://github.com/Jhuan-Nycolas/Computer
git add .
git commit -m "Inital commit"
git push -u repo main
clear
ls
clear
mkdir IA
cd IA
clear
cd ..
ls
rmdir IA
clear
poweroff
sudo pacman -S flutter
clear
sudo pacman -S dart
yay -S flutter
clear
ls
clear
cd Computer/
ls
clear
nvim
git add .
git commit -m "Backup"
git push
clear
nvim
clear
git add .
git commit -m "Backup"
git push
clear
nvim
l
clear
nvim
bc
sudo pacman -S bc
clear
git add .
git commit -m "Backup"
git push
clear
ls
cd Computer/
ls
celar
clear
javac Main.java; java Main
clear
javac Main.java; java Main
clear
javac Main.java; java Main code.bin
nvim computer/computer.java
clear
git add .
git commit -m "Backup"]
git push
clear
ls
clear
git add .
git commit -m "Backup"
git push
clear
cd
clear
poweroff
sudo pacman -S spectacle
clear
nitch
clear; nitch
clear
clear; nitch
ks
ls
clear
cd DEv
ls
clear
cd Haskell/
ls
clear
sudo pacman -Rns spectacle
ar
clear
sudo pacman -S hyprshot
clear
yay -S hyprshot
clear
hyprshot -m Active -m 
hyprshot --help
clear
hyprshot -m output -m eDP-1
clear
hyprshot -m output
ls
clear
ls
r  *.png
rm]  *.png
rm  *.png
clear]
clear
hyprshot -m output
ls
nvim main.hs
clear
exit
exit
tmux
cleatr
clear
exit
ls
rm  *.png
clear
ls
c
l
c
l *!go
clear
ls
clear
ls
go
clear
ls
cd Computer/
ls
clear
nvim
clear
cd
clear
poweroff
ls
clear
ls
clear
ls
cd Dev
ls
clear
ls
clear
cd ..
ls
clear
clear]
clear
cd Computer/
ls
clear
ls
clear
/bin/ls
clear
poweroff
ls
clear
cd Computer/
ls
clear
nvim
clear
cd 
ls
clear
ls
clear
ls
git clone https://github.com/WangTingZheng/mcp940 ./Mine
ls
clear
ls
cd Mine
ls
clear
ls
clear
ls
./startclient.sh
chmod +x ./startclient.sh
./startclient.sh
ls
./startclient.sh
nvim startclient.sh
clear
./startclient.sh
nvim runtime/commands.py
clear
sudo pacman -S python2
sudo pacman -S python
yay -S python2
clear
ls
clear
yay -Rns python2
c
l
clear
cd ..
rm -rf Mine
clear
yay -Ss monocraft
clear
yay -S ttf-monocraft
l
clear
ls
clear
cd Computer/
nvim ~/dotfiles/kitty/kitty.conf
yay -Rns ttf-monocraft
yay -Rns monocraft
yay -Qs
yay -Rns ttf-monocraft-git
clear
sudo pacman -Q
sudo pacman -Qs
sudo pacman -Q
sudo pacman -Q python
sudo pacman -Q
clear
git clone https://github.com/Jhuan-Nycolas/Jhuan-Nycolas.github.io ./Website
cd Website/
ls
clear
ls
clear
sudo pacman -S inkscape
sudo pacman -Rns inkscape
clear
ls
clear
ls
cd dotfiles/
ls
cd hypr/
ls
cp wallpaper.jpg ~/Website/
clear
sudo pacman -S doas]
sudo pacman -S doas
doas pacman -S 
doas
doas -u root
doas -u root pacman -S krita
sudo nvim /etc/doas.conf
sudo pacman -Rns doas
sudo pacman -Rns opendoas
clear
sudo pacman -S krita
clear
cd Website/
ls
clear
ls
clear
ls
cd dotfiles/
ls
cd kitty/
git clone https://github.com/Jhuan-Nycolas/Jhuan-Nycolas.github.io ./Website
git clone https://github.com/Jhuan-Nycolas/Jhuan-Nycolas.github.io ./Websi
cd Websi/
ls
mv eu.jpeg ~/Website/assets/profilepic.jpeg
cd ..
rm -rf Websi
clear
nvim
ls
cd Computer/
ls
git status
clear
cd ..
rm -rf Computer/
ls
clear
ls
cd Website/
ls
clear
nvim
git add .
git commit -m "Mudando completamente"
git push
clear
nvim
clear
cd ..
ls
rm -rf Website/
ls
clear
ls
clear
cd Dev
ls
git add .
git commit -m "backup"
git push
clear
weechat
ckear
clear
sudo pacman -S weechat
yay -S blightmud
clear
yay -Ss mud
weechat
yay -S mmucl
mmucl
clear
mmucl
mud
clear
pacman -Q
clear
pacman -Q mmucl
pacman
pacman --help
pacman -Q mmucl
which mmucl
clear
pacman -Ql mmucl
clear
mmucl2
clear
sudo pacman -Rns mmucl
clear
yay -Ss mud
yay -S mudlet
clear
ls
clear
sudo pacman -S tinyfugue
yay -S tinyfugue
sudo pacman -Ql tinyfugue
clear
tf
clear
sudo pacman -S telnet
yay -S telnet
clear
echo "import socket<\n>import threading<\n>import sys<\n><\n>def receive_messages(sock):<\n>    while True:<\n>        try:<\n>            data = sock.recv(4096)<\n>            if not data:<\n>                break<\n>            print(data.decode(), end="")<\n>        except:<\n>            break<\n><\n>def main():<\n>    host = input("MUD Host: ") or "mud.example.com"<\n>    port = int(input("Port: ") or 23)<\n><\n>    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<\n>    sock.connect((host, port))<\n><\n>    print(f"Connected to {host}:{port}!\n")<\n><\n>    # Thread para receber mensagens do servidor<\n>    threading.Thread(target=receive_messages, args=(sock,), daemon=True).start()<\n><\n>    try:<\n>        while True:<\n>            msg = input()<\n>            sock.send((msg + "\n").encode())<\n>    except KeyboardInterrupt:<\n>        print("\nDisconnected.")<\n>        sock.close()<\n>        sys.exit()<\n><\n>if __name__ == "__main__":<\n>    main()<\n>" | save client.py
clear
nvim mudclient.py
clear
python mudclient.py
clear
nvim mudclient.py
clear
python mudclient.py
clear
tf
clear
tf telnet mud.sdf.org 4000
clear
sudo pacman -S inetutils
telnet
clear
telnet mud.sdf.org 4000
clear
ls
clear
rm mudclient.py
sudo pacman -Rns tinyfugue
clear
ls
telnet google.com
clear
ls
clear
git clone https://github.com/DikuMUDOmnibus/ResortMUD
cd ResortMUD/
ls
clear
nvim
clear
ls
clear
make install
sudo make
clear
ls -a
clear
ls -a
clear
chmod +x ./backitup
./backitup
clear
ls
clear
pkill tmux
tmux
clear
ls
clear
cd ..
rm -rf ResortMUD/
ls
clear
ls
rm rm.tar.gz
ls
clear
ls
git clone https://github.com/ed2martin/intmud
clear
cd intmud/
clear
rm -rf .git
ls
clear
sudo make install
clear
make
make Makefile.am
clear
tmux
clear
cd ..
rm -rf intmud/
clear
sudo pacman -S wget
clear
wget https://www.zimmers.net/anonftp/pub/projects/coffeemud/5.10/CoffeMud.zip
wget https://www.zimmers.net/anonftp/pub/projects/coffeemud/5.10/
rm index.html
clear
ls
clear
cd Downloads/
ls
l
ll
l
clear
unzip CoffeeMud.zip
clear
ls
mv CoffeeMud.zip ..
clear
ls
clear
cd ..
rm -rf Downloads/; mkdir Downloads
clear
ls
unzip CoffeeMud.zip ./CoffeeMud.zip
unzip CoffeeMud.zip ./CoffeeMud
mkdir CoffeeMud
unzip CoffeeMud.zip ./CoffeeMud
clear
cd CoffeeMud/
clear
unzip ../CoffeeMud.zip
clear
ls
clear
ls
make
clear
sudo make
clear
nvim
echo JAVA_HOME
echo $JAVA_HOME
clear
which jdk
which jdk-openjdk
clear
java
clear
which java
clear
readlink -f $(which java)
clear
which java
readlink -f /usr/bin/java
clear
./InstallUNIX.sh
chmod +x InstallUNIX.sh
clear
./InstallUNIX.sh
clear
ls
cat mudUNIX.sh
clear
pkill tmux
tmux
clear
clear
ls
clear
ls
rm nohup.out
ls
clear
ls
cd ..
rm -rf CoffeeMud
rm CoffeeMud.zip
lc
ls
clear
ls
clear
git clone https://github.com/jnharton/mud-server mud
clear
cd mud
ls
clear
nvim
clear
nvim
sudo pacman -S dos2unix
clear
ls
clear
l | grep *.java
greṕ
grep
grep *.java
l
clear
/bin/ls -R
clear
find .
l | find .
clear
l | find .java
cd mud
clear
l | find .java
clear
l | find .java | save files
l | find .java | get name
/bin/ls -R
/bin/ls -R | find .java | get name
/bin/ls -R | find .java
clear
l | find .java | get name
clear
/bin/ls -R | find .java
clear
l | find .java | get name
clear
nvim files
chmod +x files.sh
./files.sh
clear
./files.sh
clear
nvim files.sh
clear
./files.sh
clear
nvim files.sh
./files.sh
clear
nvim files.sh
./files.sh
ls
dos2unix MUDServer/src/mud/Constants.java
clear
l
clear
cd mud
clear
l
bash
clear
ls
clear
cd mud
ls
clear
nvim list
ls
rm list
clear
./files.sh
clear
nvim files.sh
clear
./files.sh
clear
nvim files.sh
clear
./files.sh
clear
nvim
./files.sh
nvim files.sh
./files.sh
clear
ls
clear
ls
clear
nvim
java -jar mud_server.jar
ls
clear
ls
javac MUDServer/src/mud/MUDServer.java
ls
clear
sudo pacman -S ant
ant
cd MUDServer/
ant
clear
ls
cd ..
ls
cd MUDServer/
ls
clear
ls
cd dist/
ls
cd ..
ls
clear
cd build/ls
cd build/
ls
java -jar mud_server.jar
cd ..
sudo pacman -S jdk-openjdk-11
sudo pacman -S jdk-11-openjdk
sudo pacman -Ss openjdk
sudo pacman -Ss openjdk11
sudo pacman -S openjdk11
sudo pacman -S openjdk11-src
sudo pacman -S jdk11-openjdk
clear
ls
clear
ant
ls
cd build
ls
clear
ls
java --version
clear
let-env JAVA_HOME = "/usr/lib/jvm/java-11-openjdk-amd64"  # Ajuste o caminho conforme seu sistema<\n>let-env PATH = ($env.PATH | prepend $"($env.JAVA_HOME)/bin")
clear
$env.JAVA_HOME = "/usr/lib/jvm/java-11-openjdk-amd64"  # Ajuste o caminho conforme seu sistema<\n>$env.PATH = ($env.PATH | prepend $"($env.JAVA_HOME)/bin")
clear
$env.JAVA_HOME = "/usr/lib/jvm/java-11-openjdk"  # Ajuste o caminho conforme seu sistema<\n>$env.PATH = ($env.PATH | prepend $"($env.JAVA_HOME)/bin")
ant
cd ..
ant
ls
cd build
ls
java -jar mud_server.jar
cd data
ls
cd help
ls
clear
cd ..
ls
cd ..
ls
cd ..
ls
clear
ls
cd dist
ls
unzip mudserver_20250419.zip
ls
rm -rf data
rm mud_server.jar
ls
clear
cd ..
ls
clear
ls
cd bin
ls
cd ..
ls
clear
ls
ant
clear
ls
cat build.xml
clear
ls
cd dist
ls
cd ,,
cd ..
ls
clear
ls
cd build/ls
cd build/
ls
clear
cat mud_server.jar
cd ..
ls
clear
ls
clear
ls
clear
ls
clear
ls
clear
cd build
clear
java -jar mud_server.jar
clear
..
l
clear
ls
# 1. Limpe o build anterior<\n>ant clean<\n><\n># 2. Forçar recompilação completa<\n>ant compile<\n><\n># 3. Verifique se as classes foram geradas<\n>ls bin/mud | where name =~ ".*.class"<\n><\n># 4. Criar o JAR com manifest correto<\n>(<\n>    echo "Main-Class: mud.MUDServer"<\n>    echo "Class-Path: ."<\n>) | save -f manifest.txt<\n><\n>ant jar | ignore  # Ignora mensagens de warning<\n><\n># 5. Executar corretamente (dentro da pasta dist/)<\n>cd dist<\n>java -jar mud_server.jar
clear
cd ..
cd .
cd ..
ls
rm -rf mud
clear
sudo pacman -Rns dos2unix
clear
telnet mud.sdf.org 4000
clear
telnet mud.sdf.org 4000
clear
ls
clear
yay -S tinyfugue
clear
tf telnet mud.sdf.org 4000
clear
tf
clear
sudo pacman -S mudlet
clear
yay -S mudlet
clear
tf
clear
ls
clear
ls
clear
ls
cd Dev
ls
clear
cd ..
clear
ls
clear
sudo pacman -S gradle
clear
ls
cd Dev
ls
cd ...
clear
cd tux
clear
mkdir JavaFX
cd JavaFX/
ls
clear
cd ..
rmdir JavaFX/
clear
ls
clear
git clone https://github.com/Jhuan-Nycolas/Jhuan-Nycolas.github.io ./Website
cd Website/
ls
clear
nvim main.js
git add .
git commit -m "backup"
git push
clear
nvim index.html
clear
git add .
git commit -m "backup"
git push
clear
ls
clear
ls
clear
l
sclear
ls
clear
ls
clear
l
clear
sudo pacman -S discord
yay -S ttf-noto-nerd-font
yay -S ttf-noto
yay -Ss ttf-noto
yay -Ss ttf-noto-nerd
yay -S ttf-noto-nerd
pkill discord
sudo pacman -S bashtop
bashtop
sudo pacman -Rns discord
clear
bashtop --help
bashtop
clear
sudo pacman -S tty-clock
cmatrix
clear
sudo pacman -S ansi-clock
yay -S tty-clock
tty-clock
clear
tty-clock
tty-clock -c -C 4 -b
tty-clock --help
clear
tty-clock -c -C 4 -b
clear
nvim dotfiles/nushell/
clear
clock
clear
ls
cd dotfiles
ls
